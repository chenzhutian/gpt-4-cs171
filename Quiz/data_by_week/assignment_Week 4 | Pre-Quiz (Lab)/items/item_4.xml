<item ident="gac0efe80b0820409143878da76ae6538" title="Method Chaining">
<itemmetadata>
          <qtimetadata>
            <qtimetadatafield>
              <fieldlabel>question_type</fieldlabel>
              <fieldentry>multiple_answers_question</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>points_possible</fieldlabel>
              <fieldentry>0.1</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>original_answer_ids</fieldlabel>
              <fieldentry>86500,77367,34425</fieldentry>
            </qtimetadatafield>
            <qtimetadatafield>
              <fieldlabel>assessment_question_identifierref</fieldlabel>
              <fieldentry>g04c952d869252d657f72edf90c50ddf9</fieldentry>
            </qtimetadatafield>
          </qtimetadata>
        </itemmetadata>
        <presentation>
          <material>
            <mattext texttype="text/html">&lt;div&gt;&lt;p&gt;&lt;strong&gt;&lt;i&gt;Method chaining&lt;/i&gt;&lt;/strong&gt;&lt;span&gt; is a common technique in JavaScript, especially when working with D3. Please select the correct sentences:&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</mattext>
          </material>
          <response_lid ident="response1" rcardinality="Multiple">
            <render_choice>
              <response_label ident="86500">
                <material>
                  <mattext texttype="text/plain">Method chaining can be used to simplify code in scenarios that involve calling multiple functions consecutively. Each method returns an object, allowing the calls to be chained together in a single statement without requiring variables to store the intermediate results.</mattext>
                </material>
              </response_label>
              <response_label ident="77367">
                <material>
                  <mattext texttype="text/plain">By “chaining” methods together with an ampersand (“&amp;”) you can perform several actions in a single line of code</mattext>
                </material>
              </response_label>
              <response_label ident="34425">
                <material>
                  <mattext texttype="text/plain">When chaining methods together, the order matters! The output type of one method has to match the input type expected by the next method in the chain.</mattext>
                </material>
              </response_label>
            </render_choice>
          </response_lid>
        </presentation>
        <resprocessing>
          <outcomes>
            <decvar maxvalue="100" minvalue="0" varname="SCORE" vartype="Decimal"/>
          </outcomes>
          <respcondition continue="No">
            <conditionvar>
              <and>
                <varequal respident="response1">86500</varequal>
                <not>
                  <varequal respident="response1">77367</varequal>
                </not>
                <varequal respident="response1">34425</varequal>
              </and>
            </conditionvar>
            <setvar action="Set" varname="SCORE">100</setvar>
          </respcondition>
        </resprocessing>
</item>
